name: CI
on:
  push:
    branches: [ master ]
    paths:
      - '**/*.ps1'
      - '.github/workflows/**'
  pull_request:
    branches: [ master ]
    paths:
      - '**/*.ps1'
      - '.github/workflows/**'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2025
            name: "Windows Server 2025 (Latest)"
          - os: windows-2022  
            name: "Windows Server 2022"
    
    runs-on: ${{ matrix.os }}
    name: Test on ${{ matrix.name }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Display OS Information
      run: |
        Write-Host "Testing on: ${{ matrix.name }}"
        Write-Host "Runner OS: ${{ matrix.os }}"
        Write-Host "OS Name: $(Get-ComputerInfo -Property WindowsProductName | Select-Object -ExpandProperty WindowsProductName)"
        Write-Host "OS Version: $(Get-ComputerInfo -Property WindowsVersion | Select-Object -ExpandProperty WindowsVersion)"
        Write-Host "PowerShell Version: $($PSVersionTable.PSVersion)"
      shell: pwsh

    - name: Install Pester
      run: |
        Write-Host "Installing Pester..." -ForegroundColor Yellow
        Install-Module -Name Pester -Force -SkipPublisherCheck
        Import-Module Pester
        $pesterVersion = Get-Module Pester
        Write-Host "Pester version: $($pesterVersion.Version)" -ForegroundColor Green
      shell: pwsh
      
    - name: Setup PVM
      run: |
        Write-Host "Setting up PVM..." -ForegroundColor Yellow
        .\src\pvm.ps1 setup
        if ($LASTEXITCODE -ne 0) {
          Write-Error "PVM setup failed with exit code: $LASTEXITCODE"
          exit $LASTEXITCODE
        }
        Write-Host "✅ PVM setup completed successfully" -ForegroundColor Green
      shell: pwsh
        
    - name: Run tests
      run: |
        Write-Host "Running PVM tests..." -ForegroundColor Yellow
        
        # Run pvm.ps1 directly and capture exit code
        .\src\pvm.ps1 test --coverage
        $exitCode = $LASTEXITCODE
        
        Write-Host "Test execution completed with exit code: $exitCode"
        
        if ($exitCode -eq 0) {
          Write-Host "✅ All tests passed successfully!" -ForegroundColor Green
        } else {
          Write-Host "❌ Tests failed with exit code: $exitCode" -ForegroundColor Red
          exit $exitCode
        }
      shell: pwsh